// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// kmeansclust_interface
IntegerVector kmeansclust_interface(NumericMatrix data_mat, int N_centers);
RcppExport SEXP _CS599Clustering_kmeansclust_interface(SEXP data_matSEXP, SEXP N_centersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data_mat(data_matSEXP);
    Rcpp::traits::input_parameter< int >::type N_centers(N_centersSEXP);
    rcpp_result_gen = Rcpp::wrap(kmeansclust_interface(data_mat, N_centers));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_CS599Clustering_kmeansclust_interface", (DL_FUNC) &_CS599Clustering_kmeansclust_interface, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_CS599Clustering(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
